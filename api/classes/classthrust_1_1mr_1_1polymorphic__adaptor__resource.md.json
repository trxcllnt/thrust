{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": false,
      "name": "thrust::mr::memory_resource< void * >",
      "publicFunctions": [
        {
          "abstract": false,
          "anchor": "#function-~memory-resource",
          "argsString": "()=default",
          "category": "functions",
          "const": false,
          "default": true,
          "definition": "virtual thrust::mr::memory_resource< Pointer >::~memory_resource",
          "deleted": false,
          "details": "Virtual destructor, defaulted when possible. ",
          "explicit": false,
          "fullname": "thrust::mr::memory_resource::~memory_resource",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "language": "cpp",
          "location": {
            "column": 13,
            "file": "thrust/mr/memory_resource.h",
            "line": 57
          },
          "name": "~memory_resource",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "qualifiedname": "thrust::mr::memory_resource::~memory_resource",
          "refid": "classthrust_1_1mr_1_1memory__resource_1a261fd74b7a280f8a694acbe47286d5b0",
          "static": false,
          "strong": false,
          "title": "~memory_resource",
          "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#function-~memory-resource",
          "virtual": true,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-allocate",
          "argsString": "(std::size_t bytes, std::size_t alignment=alignof(std::max_align_t))",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "pointer thrust::mr::memory_resource< Pointer >::allocate",
          "deleted": false,
          "details": "Allocates memory of size at least <code>bytes</code> and alignment at least <code>alignment</code>.",
          "exceptionsList": [
            {
              "name": "thrust::bad_alloc",
              "text": "when no memory with requested size and alignment can be allocated. "
            }
          ],
          "explicit": false,
          "fullname": "thrust::mr::memory_resource::allocate",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 70,
            "bodyFile": "thrust/mr/memory_resource.h",
            "bodyStart": 67,
            "column": 13,
            "file": "thrust/mr/memory_resource.h",
            "line": 67
          },
          "name": "allocate",
          "override": false,
          "paramList": [
            {
              "name": "bytes",
              "text": "size, in bytes, that is requested from this allocation "
            },
            {
              "name": "alignment",
              "text": "alignment that is requested from this allocation "
            }
          ],
          "params": [
            {
              "name": "bytes",
              "type": "std::size_t",
              "typePlain": "std::size_t"
            },
            {
              "defval": "alignof(std::max_align_t)",
              "defvalPlain": "alignof(std::max_align_t)",
              "name": "alignment",
              "type": "std::size_t",
              "typePlain": "std::size_t"
            }
          ],
          "pureVirtual": false,
          "qualifiedname": "thrust::mr::memory_resource::allocate",
          "refid": "classthrust_1_1mr_1_1memory__resource_1a60e0b2a6bd20537fff92b3a41ec5f2c2",
          "returns": [
            "A pointer to void to the newly allocated memory. "
          ],
          "static": false,
          "strong": false,
          "title": "allocate",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#typedef-pointer\">pointer</a>",
          "typePlain": "pointer",
          "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#function-allocate",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-deallocate",
          "argsString": "(pointer p, std::size_t bytes, std::size_t alignment=alignof(std::max_align_t))",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "void thrust::mr::memory_resource< Pointer >::deallocate",
          "deleted": false,
          "details": "Deallocates memory pointed to by <code>p</code>.",
          "explicit": false,
          "fullname": "thrust::mr::memory_resource::deallocate",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 83,
            "bodyFile": "thrust/mr/memory_resource.h",
            "bodyStart": 80,
            "column": 10,
            "file": "thrust/mr/memory_resource.h",
            "line": 80
          },
          "name": "deallocate",
          "override": false,
          "paramList": [
            {
              "name": "p",
              "text": "pointer to be deallocated "
            },
            {
              "name": "bytes",
              "text": "the size of the allocation. This must be equivalent to the value of <code>bytes</code> that was passed to the allocation function that returned <code>p</code>. "
            },
            {
              "name": "alignment",
              "text": "the alignment of the allocation. This must be equivalent to the value of <code>alignment</code> that was passed to the allocation function that returned <code>p</code>. "
            }
          ],
          "params": [
            {
              "name": "p",
              "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#typedef-pointer\">pointer</a>",
              "typePlain": "pointer"
            },
            {
              "name": "bytes",
              "type": "std::size_t",
              "typePlain": "std::size_t"
            },
            {
              "defval": "alignof(std::max_align_t)",
              "defvalPlain": "alignof(std::max_align_t)",
              "name": "alignment",
              "type": "std::size_t",
              "typePlain": "std::size_t"
            }
          ],
          "pureVirtual": false,
          "qualifiedname": "thrust::mr::memory_resource::deallocate",
          "refid": "classthrust_1_1mr_1_1memory__resource_1a5153a93c858b588b4a1ea1e2ba7a489a",
          "static": false,
          "strong": false,
          "title": "deallocate",
          "type": "void",
          "typePlain": "void",
          "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#function-deallocate",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-is-equal",
          "argsString": "(const memory_resource &other) const noexcept",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "__host__ __device__ bool thrust::mr::memory_resource< Pointer >::is_equal",
          "deleted": false,
          "details": "Compares this resource to the other one. The default implementation uses identity comparison, which is often the right thing to do and doesn't require RTTI involvement.",
          "explicit": false,
          "fullname": "thrust::mr::memory_resource::is_equal",
          "hasDetails": true,
          "inline": true,
          "kind": "function",
          "language": "cpp",
          "location": {
            "bodyEnd": 95,
            "bodyFile": "thrust/mr/memory_resource.h",
            "bodyStart": 92,
            "column": 10,
            "file": "thrust/mr/memory_resource.h",
            "line": 92
          },
          "name": "is_equal",
          "override": false,
          "paramList": [
            {
              "name": "other",
              "text": "the other resource to compare this resource to "
            }
          ],
          "params": [
            {
              "name": "other",
              "type": "const <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html\">memory_resource</a> &",
              "typePlain": "const memory_resource &"
            }
          ],
          "pureVirtual": false,
          "qualifiedname": "thrust::mr::memory_resource::is_equal",
          "refid": "classthrust_1_1mr_1_1memory__resource_1aa31ed2a7057d84f4e616498172875474",
          "returns": [
            "whether the two resources are equivalent. "
          ],
          "static": false,
          "strong": false,
          "title": "is_equal",
          "type": "__host__ __device__ bool",
          "typePlain": "__host__ __device__ bool",
          "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#function-is-equal",
          "virtual": false,
          "visibility": "public"
        }
      ],
      "publicTypes": [
        {
          "abstract": false,
          "anchor": "#typedef-pointer",
          "category": "types",
          "const": false,
          "definition": "typedef Pointer thrust::mr::memory_resource< Pointer >::pointer",
          "details": "Alias for the template parameter. ",
          "explicit": false,
          "fullname": "thrust::mr::memory_resource::pointer",
          "hasDetails": true,
          "inline": false,
          "kind": "typedef",
          "language": "cpp",
          "location": {
            "bodyFile": "thrust/mr/memory_resource.h",
            "bodyStart": 53,
            "column": 21,
            "file": "thrust/mr/memory_resource.h",
            "line": 53
          },
          "name": "pointer",
          "override": false,
          "qualifiedname": "thrust::mr::memory_resource::pointer",
          "refid": "classthrust_1_1mr_1_1memory__resource_1aba4c34d8cc07d59ce14fe6c30e92727e",
          "static": false,
          "strong": false,
          "title": "pointer",
          "type": "Pointer",
          "typePlain": "Pointer",
          "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html#typedef-pointer",
          "visibility": "public"
        }
      ],
      "refid": "classthrust_1_1mr_1_1memory__resource",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html",
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "thrust::mr::polymorphic_adaptor_resource",
  "hasAdditionalMembers": true,
  "hasDetails": true,
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 53,
    "bodyFile": "thrust/mr/polymorphic_adaptor.h",
    "bodyStart": 29,
    "column": 1,
    "file": "thrust/mr/polymorphic_adaptor.h",
    "line": 28
  },
  "name": "thrust::mr::polymorphic_adaptor_resource",
  "override": false,
  "parent": {
    "anchor": "",
    "brief": "<code>thrust::mr</code> is the namespace containing system agnostic types and functions for <code>memory&#95;resource</code> related functionalities. ",
    "category": "namespaces",
    "fullname": "thrust::mr",
    "kind": "namespace",
    "language": "cpp",
    "name": "thrust::mr",
    "qualifiedname": "thrust::mr",
    "refid": "namespacethrust_1_1mr",
    "summary": "thrust::mr is the namespace containing system agnostic types and functions for memory_resource related functionalities. ",
    "title": "thrust::mr",
    "url": "{{ site.baseurl }}/api/namespaces/namespacethrust_1_1mr.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "thrust",
      "kind": "namespace",
      "language": "cpp",
      "name": "thrust",
      "qualifiedname": "thrust",
      "refid": "namespacethrust",
      "title": "thrust",
      "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<code>thrust::mr</code> is the namespace containing system agnostic types and functions for <code>memory&#95;resource</code> related functionalities. ",
      "category": "namespaces",
      "fullname": "thrust::mr",
      "kind": "namespace",
      "language": "cpp",
      "name": "thrust::mr",
      "qualifiedname": "thrust::mr",
      "refid": "namespacethrust_1_1mr",
      "summary": "thrust::mr is the namespace containing system agnostic types and functions for memory_resource related functionalities. ",
      "title": "thrust::mr",
      "url": "{{ site.baseurl }}/api/namespaces/namespacethrust_1_1mr.html",
      "visibility": "public"
    }
  ],
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-upstream-resource",
      "category": "attributes",
      "const": false,
      "definition": "memory_resource<Pointer>* thrust::mr::polymorphic_adaptor_resource< Pointer >::upstream_resource",
      "explicit": false,
      "fullname": "thrust::mr::polymorphic_adaptor_resource::upstream_resource",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/mr/polymorphic_adaptor.h",
        "bodyStart": 52,
        "column": 22,
        "file": "thrust/mr/polymorphic_adaptor.h",
        "line": 52
      },
      "name": "upstream_resource",
      "override": false,
      "qualifiedname": "thrust::mr::polymorphic_adaptor_resource::upstream_resource",
      "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource_1acdac88a31bb9bc6da50a8df73b815e3f",
      "static": false,
      "strong": false,
      "title": "upstream_resource",
      "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html\">memory_resource</a>< Pointer > *",
      "typePlain": "memory_resource< Pointer > *",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html#variable-upstream-resource",
      "visibility": "private"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-polymorphic-adaptor-resource",
      "argsString": "(memory_resource< Pointer > *t)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "thrust::mr::polymorphic_adaptor_resource< Pointer >::polymorphic_adaptor_resource",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::mr::polymorphic_adaptor_resource::polymorphic_adaptor_resource",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 33,
        "bodyFile": "thrust/mr/polymorphic_adaptor.h",
        "bodyStart": 31,
        "column": 5,
        "file": "thrust/mr/polymorphic_adaptor.h",
        "line": 31
      },
      "name": "polymorphic_adaptor_resource",
      "override": false,
      "params": [
        {
          "name": "t",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html\">memory_resource</a>< Pointer > *",
          "typePlain": "memory_resource< Pointer > *"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::mr::polymorphic_adaptor_resource::polymorphic_adaptor_resource",
      "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource_1ac6880f5b87e82700dcf23ee24f394ea2",
      "static": false,
      "strong": false,
      "title": "polymorphic_adaptor_resource",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html#function-polymorphic-adaptor-resource",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-do-allocate",
      "argsString": "(std::size_t bytes, std::size_t alignment=alignof(std::max_align_t)) override",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "virtual Pointer thrust::mr::polymorphic_adaptor_resource< Pointer >::do_allocate",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::mr::polymorphic_adaptor_resource::do_allocate",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 38,
        "bodyFile": "thrust/mr/polymorphic_adaptor.h",
        "bodyStart": 35,
        "column": 21,
        "file": "thrust/mr/polymorphic_adaptor.h",
        "line": 35
      },
      "name": "do_allocate",
      "override": true,
      "params": [
        {
          "name": "bytes",
          "type": "std::size_t",
          "typePlain": "std::size_t"
        },
        {
          "defval": "alignof(std::max_align_t)",
          "defvalPlain": "alignof(std::max_align_t)",
          "name": "alignment",
          "type": "std::size_t",
          "typePlain": "std::size_t"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::mr::polymorphic_adaptor_resource::do_allocate",
      "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource_1a1deb1f9c8daf070bc37f065b9168c1b8",
      "static": false,
      "strong": false,
      "title": "do_allocate",
      "type": "Pointer",
      "typePlain": "Pointer",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html#function-do-allocate",
      "virtual": true,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-do-deallocate",
      "argsString": "(Pointer p, std::size_t bytes, std::size_t alignment) override",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "virtual void thrust::mr::polymorphic_adaptor_resource< Pointer >::do_deallocate",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::mr::polymorphic_adaptor_resource::do_deallocate",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 43,
        "bodyFile": "thrust/mr/polymorphic_adaptor.h",
        "bodyStart": 40,
        "column": 18,
        "file": "thrust/mr/polymorphic_adaptor.h",
        "line": 40
      },
      "name": "do_deallocate",
      "override": true,
      "params": [
        {
          "name": "p",
          "type": "Pointer",
          "typePlain": "Pointer"
        },
        {
          "name": "bytes",
          "type": "std::size_t",
          "typePlain": "std::size_t"
        },
        {
          "name": "alignment",
          "type": "std::size_t",
          "typePlain": "std::size_t"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::mr::polymorphic_adaptor_resource::do_deallocate",
      "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource_1ae40bac5987f63c9cb199a8901053bbb0",
      "static": false,
      "strong": false,
      "title": "do_deallocate",
      "type": "void",
      "typePlain": "void",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html#function-do-deallocate",
      "virtual": true,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-do-is-equal",
      "argsString": "(const memory_resource< Pointer > &other) const noexcept override",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ virtual __device__ bool thrust::mr::polymorphic_adaptor_resource< Pointer >::do_is_equal",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::mr::polymorphic_adaptor_resource::do_is_equal",
      "hasDetails": false,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 49,
        "bodyFile": "thrust/mr/polymorphic_adaptor.h",
        "bodyStart": 46,
        "column": 18,
        "file": "thrust/mr/polymorphic_adaptor.h",
        "line": 46
      },
      "name": "do_is_equal",
      "override": true,
      "params": [
        {
          "name": "other",
          "type": "const <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1memory__resource.html\">memory_resource</a>< Pointer > &",
          "typePlain": "const memory_resource< Pointer > &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::mr::polymorphic_adaptor_resource::do_is_equal",
      "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource_1ab4e6fcb82bf62af72ebbcdd086e24c3d",
      "static": false,
      "strong": false,
      "title": "do_is_equal",
      "type": "__host__ virtual __device__ bool",
      "typePlain": "__host__ virtual __device__ bool",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html#function-do-is-equal",
      "virtual": true,
      "visibility": "public"
    }
  ],
  "qualifiedname": "thrust::mr::polymorphic_adaptor_resource",
  "refid": "classthrust_1_1mr_1_1polymorphic__adaptor__resource",
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "defval": "void *",
      "defvalPlain": "void *",
      "name": "",
      "type": "typename Pointer",
      "typePlain": "typename Pointer"
    }
  ],
  "title": "thrust::mr::polymorphic_adaptor_resource",
  "url": "{{ site.baseurl }}/api/classes/classthrust_1_1mr_1_1polymorphic__adaptor__resource.html",
  "visibility": "public"
}