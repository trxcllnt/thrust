{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html\">device&#95;new&#95;allocator</a></code> is a device memory allocator that employs the <code>device&#95;new</code> function for allocation.",
  "explicit": false,
  "fullname": "thrust::device_new_allocator",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/device_new_allocator.h>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 164,
    "bodyFile": "thrust/device_new_allocator.h",
    "bodyStart": 47,
    "column": 3,
    "file": "thrust/device_new_allocator.h",
    "line": 46
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "allocators",
    "kind": "group",
    "language": "",
    "name": "allocators",
    "qualifiedname": "allocators",
    "refid": "group__allocators",
    "title": "Allocators",
    "url": "{{ site.baseurl }}/api/groups/group__allocators.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "memory_management",
      "kind": "group",
      "language": "",
      "name": "memory_management",
      "qualifiedname": "memory_management",
      "refid": "group__memory__management",
      "title": "Memory Management",
      "url": "{{ site.baseurl }}/api/groups/group__memory__management.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "allocators",
      "kind": "group",
      "language": "",
      "name": "allocators",
      "qualifiedname": "allocators",
      "refid": "group__allocators",
      "title": "Allocators",
      "url": "{{ site.baseurl }}/api/groups/group__allocators.html",
      "visibility": "public"
    }
  ],
  "name": "thrust::device_new_allocator",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "thrust",
    "kind": "namespace",
    "language": "cpp",
    "name": "thrust",
    "qualifiedname": "thrust",
    "refid": "namespacethrust",
    "title": "thrust",
    "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "thrust",
      "kind": "namespace",
      "language": "cpp",
      "name": "thrust",
      "qualifiedname": "thrust",
      "refid": "namespacethrust",
      "title": "thrust",
      "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
      "visibility": "public"
    }
  ],
  "publicClasses": [
    {
      "anchor": "",
      "category": "classes",
      "fullname": "thrust::device_new_allocator::rebind",
      "kind": "struct",
      "language": "cpp",
      "name": "thrust::device_new_allocator::rebind",
      "qualifiedname": "thrust::device_new_allocator::rebind",
      "refid": "structthrust_1_1device__new__allocator_1_1rebind",
      "title": "thrust::device_new_allocator::rebind",
      "url": "{{ site.baseurl }}/api/classes/structthrust_1_1device__new__allocator_1_1rebind.html",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-device-new-allocator",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::device_new_allocator< T >::device_new_allocator",
      "deleted": false,
      "details": "No-argument constructor has no effect. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::device_new_allocator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 85,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 85,
        "column": 12,
        "file": "thrust/device_new_allocator.h",
        "line": 85
      },
      "name": "device_new_allocator",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::device_new_allocator",
      "refid": "classthrust_1_1device__new__allocator_1ae6966e0e784f10d7e6831e27b5ab2a51",
      "static": false,
      "strong": false,
      "title": "device_new_allocator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-device-new-allocator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-~device-new-allocator",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::device_new_allocator< T >::~device_new_allocator",
      "deleted": false,
      "details": "No-argument destructor has no effect. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::~device_new_allocator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 89,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 89,
        "column": 12,
        "file": "thrust/device_new_allocator.h",
        "line": 89
      },
      "name": "~device_new_allocator",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::~device_new_allocator",
      "refid": "classthrust_1_1device__new__allocator_1a3e740c395cb2893ed0e7cd6fb6c74814",
      "static": false,
      "strong": false,
      "title": "~device_new_allocator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-~device-new-allocator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-device-new-allocator",
      "argsString": "(device_new_allocator const &)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::device_new_allocator< T >::device_new_allocator",
      "deleted": false,
      "details": "Copy constructor has no effect. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::device_new_allocator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 93,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 93,
        "column": 12,
        "file": "thrust/device_new_allocator.h",
        "line": 93
      },
      "name": "device_new_allocator",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html\">device_new_allocator</a> const &",
          "typePlain": "device_new_allocator const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::device_new_allocator",
      "refid": "classthrust_1_1device__new__allocator_1ade85f20afb3db16e8e65bd2771757773",
      "static": false,
      "strong": false,
      "title": "device_new_allocator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-device-new-allocator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-device-new-allocator",
      "argsString": "(device_new_allocator< U > const &)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::device_new_allocator< T >::device_new_allocator",
      "deleted": false,
      "details": "Constructor from other <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__malloc__allocator.html\">device&#95;malloc&#95;allocator</a></code> has no effect. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::device_new_allocator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 98,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 98,
        "column": 12,
        "file": "thrust/device_new_allocator.h",
        "line": 98
      },
      "name": "device_new_allocator",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html\">device_new_allocator</a>< U > const &",
          "typePlain": "device_new_allocator< U > const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::device_new_allocator",
      "refid": "classthrust_1_1device__new__allocator_1a50206aa83377a2b1bba4b2ab1d69275a",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "title": "device_new_allocator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-device-new-allocator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-address",
      "argsString": "(reference r)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ pointer thrust::device_new_allocator< T >::address",
      "deleted": false,
      "details": "Returns the address of an allocated object. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::address",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 104,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 104,
        "column": 20,
        "file": "thrust/device_new_allocator.h",
        "line": 104
      },
      "name": "address",
      "override": false,
      "params": [
        {
          "name": "r",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-reference\">reference</a>",
          "typePlain": "reference"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::address",
      "refid": "classthrust_1_1device__new__allocator_1ac297146b85af75bd00f255dcf4b61939",
      "returns": [
        "<code>&r</code>. "
      ],
      "static": false,
      "strong": false,
      "title": "address",
      "type": "__host__ __device__ <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-pointer\">pointer</a>",
      "typePlain": "__host__ __device__ pointer",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-address",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-address",
      "argsString": "(const_reference r)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ const_pointer thrust::device_new_allocator< T >::address",
      "deleted": false,
      "details": "Returns the address an allocated object. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::address",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 110,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 110,
        "column": 26,
        "file": "thrust/device_new_allocator.h",
        "line": 110
      },
      "name": "address",
      "override": false,
      "params": [
        {
          "name": "r",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-reference\">const_reference</a>",
          "typePlain": "const_reference"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::address",
      "refid": "classthrust_1_1device__new__allocator_1a18b47d866992bd6a54c363dc02704337",
      "returns": [
        "<code>&r</code>. "
      ],
      "static": false,
      "strong": false,
      "title": "address",
      "type": "__host__ __device__ <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-pointer\">const_pointer</a>",
      "typePlain": "__host__ __device__ const_pointer",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-address",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-allocate",
      "argsString": "(size_type cnt, const_pointer=const_pointer(static_cast< T * >(0)))",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ pointer thrust::device_new_allocator< T >::allocate",
      "deleted": false,
      "details": "Allocates storage for <code>cnt</code> objects. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::allocate",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 128,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 118,
        "column": 20,
        "file": "thrust/device_new_allocator.h",
        "line": 118
      },
      "name": "allocate",
      "note": [
        "Memory allocated by this function must be deallocated with <code>deallocate</code>. "
      ],
      "override": false,
      "paramList": [
        {
          "name": "cnt",
          "text": "The number of objects to allocate. "
        }
      ],
      "params": [
        {
          "name": "cnt",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-size-type\">size_type</a>",
          "typePlain": "size_type"
        },
        {
          "defval": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-pointer\">const_pointer</a>(static_cast< T * >(0))",
          "defvalPlain": "const_pointer(static_cast< T * >(0))",
          "name": "",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-pointer\">const_pointer</a>",
          "typePlain": "const_pointer"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::allocate",
      "refid": "classthrust_1_1device__new__allocator_1a4d92ec35816ebbb84ed8b82c6a0b99e7",
      "returns": [
        "A <code>pointer</code> to uninitialized storage for <code>cnt</code> objects. "
      ],
      "static": false,
      "strong": false,
      "title": "allocate",
      "type": "__host__ <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-pointer\">pointer</a>",
      "typePlain": "__host__ pointer",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-allocate",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-deallocate",
      "argsString": "(pointer p, size_type cnt)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ void thrust::device_new_allocator< T >::deallocate",
      "deleted": false,
      "details": "Deallocates storage for objects allocated with <code>allocate</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::deallocate",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 142,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 137,
        "column": 17,
        "file": "thrust/device_new_allocator.h",
        "line": 137
      },
      "name": "deallocate",
      "note": [
        "Memory deallocated by this function must previously have been allocated with <code>allocate</code>. "
      ],
      "override": false,
      "paramList": [
        {
          "name": "p",
          "text": "A <code>pointer</code> to the storage to deallocate. "
        },
        {
          "name": "cnt",
          "text": "The size of the previous allocation. "
        }
      ],
      "params": [
        {
          "name": "p",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-pointer\">pointer</a>",
          "typePlain": "pointer"
        },
        {
          "name": "cnt",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-size-type\">size_type</a>",
          "typePlain": "size_type"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::deallocate",
      "refid": "classthrust_1_1device__new__allocator_1abc583ce7b93eaf48624c5a83afb6d66f",
      "static": false,
      "strong": false,
      "title": "deallocate",
      "type": "__host__ void",
      "typePlain": "__host__ void",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-deallocate",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-max-size",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ size_type thrust::device_new_allocator< T >::max_size",
      "deleted": false,
      "details": "Returns the largest value <code>n</code> for which <code>allocate(n)</code> might succeed. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::max_size",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 151,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 148,
        "column": 22,
        "file": "thrust/device_new_allocator.h",
        "line": 148
      },
      "name": "max_size",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::max_size",
      "refid": "classthrust_1_1device__new__allocator_1ac29f19b0d96453fe2cbb479d55633256",
      "returns": [
        "The largest value <code>n</code> for which <code>allocate(n)</code> might succeed. "
      ],
      "static": false,
      "strong": false,
      "title": "max_size",
      "type": "__host__ __device__ <a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-size-type\">size_type</a>",
      "typePlain": "__host__ __device__ size_type",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-max-size",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator==",
      "argsString": "(device_new_allocator const &)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ bool thrust::device_new_allocator< T >::operator==",
      "deleted": false,
      "details": "Compares against another <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__malloc__allocator.html\">device&#95;malloc&#95;allocator</a></code> for equality. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::operator==",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 157,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 157,
        "column": 17,
        "file": "thrust/device_new_allocator.h",
        "line": 157
      },
      "name": "operator==",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html\">device_new_allocator</a> const &",
          "typePlain": "device_new_allocator const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::operator==",
      "refid": "classthrust_1_1device__new__allocator_1a1e07df9f9da96a337010d5c985e51f45",
      "returns": [
        "<code>true</code>"
      ],
      "static": false,
      "strong": false,
      "title": "operator==",
      "type": "__host__ __device__ bool",
      "typePlain": "__host__ __device__ bool",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-operator==",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator!=",
      "argsString": "(device_new_allocator const &a)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ bool thrust::device_new_allocator< T >::operator!=",
      "deleted": false,
      "details": "Compares against another <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__malloc__allocator.html\">device&#95;malloc&#95;allocator</a></code> for inequality. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::operator!=",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 163,
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 163,
        "column": 17,
        "file": "thrust/device_new_allocator.h",
        "line": 163
      },
      "name": "operator!=",
      "override": false,
      "params": [
        {
          "name": "a",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html\">device_new_allocator</a> const &",
          "typePlain": "device_new_allocator const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::device_new_allocator::operator!=",
      "refid": "classthrust_1_1device__new__allocator_1ae8a6acef0ce17802b2476da95108d8fb",
      "returns": [
        "<code>false</code>"
      ],
      "static": false,
      "strong": false,
      "title": "operator!=",
      "type": "__host__ __device__ bool",
      "typePlain": "__host__ __device__ bool",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#function-operator!=",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-value-type",
      "category": "types",
      "const": false,
      "definition": "typedef T thrust::device_new_allocator< T >::value_type",
      "details": "Type of element allocated, <code>T</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::value_type",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 50,
        "column": 47,
        "file": "thrust/device_new_allocator.h",
        "line": 50
      },
      "name": "value_type",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::value_type",
      "refid": "classthrust_1_1device__new__allocator_1abc37aa0825e971c26eefa3340db3dd1b",
      "static": false,
      "strong": false,
      "title": "value_type",
      "type": "T",
      "typePlain": "T",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-value-type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-pointer",
      "category": "types",
      "const": false,
      "definition": "typedef device_ptr<T> thrust::device_new_allocator< T >::pointer",
      "details": "Pointer to allocation, <code>device&#95;ptr&lt;T&gt;</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::pointer",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 53,
        "column": 44,
        "file": "thrust/device_new_allocator.h",
        "line": 53
      },
      "name": "pointer",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::pointer",
      "refid": "classthrust_1_1device__new__allocator_1a35be28c39ec52656a3cd8f20cf3a8444",
      "static": false,
      "strong": false,
      "title": "pointer",
      "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__ptr.html\">device_ptr</a>< T >",
      "typePlain": "device_ptr< T >",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-pointer",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-const-pointer",
      "category": "types",
      "const": false,
      "definition": "typedef device_ptr<const T> thrust::device_new_allocator< T >::const_pointer",
      "details": "<code>const</code> pointer to allocation, <code>device&#95;ptr&lt;const T&gt;</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::const_pointer",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 56,
        "column": 38,
        "file": "thrust/device_new_allocator.h",
        "line": 56
      },
      "name": "const_pointer",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::const_pointer",
      "refid": "classthrust_1_1device__new__allocator_1a769b7b5781dd6631f2d608a55393d8b4",
      "static": false,
      "strong": false,
      "title": "const_pointer",
      "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__ptr.html\">device_ptr</a>< const T >",
      "typePlain": "device_ptr< const T >",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-pointer",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-reference",
      "category": "types",
      "const": false,
      "definition": "typedef device_reference<T> thrust::device_new_allocator< T >::reference",
      "details": "Reference to allocated element, <code>device&#95;reference&lt;T&gt;</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::reference",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 59,
        "column": 44,
        "file": "thrust/device_new_allocator.h",
        "line": 59
      },
      "name": "reference",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::reference",
      "refid": "classthrust_1_1device__new__allocator_1a49d12531e18f40d32800075027b70158",
      "static": false,
      "strong": false,
      "title": "reference",
      "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__reference.html\">device_reference</a>< T >",
      "typePlain": "device_reference< T >",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-reference",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-const-reference",
      "category": "types",
      "const": false,
      "definition": "typedef device_reference<const T> thrust::device_new_allocator< T >::const_reference",
      "details": "<code>const</code> reference to allocated element, <code>device&#95;reference&lt;const T&gt;</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::const_reference",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 62,
        "column": 38,
        "file": "thrust/device_new_allocator.h",
        "line": 62
      },
      "name": "const_reference",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::const_reference",
      "refid": "classthrust_1_1device__new__allocator_1a042b8244006f421275ad3d6eb90f8935",
      "static": false,
      "strong": false,
      "title": "const_reference",
      "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__reference.html\">device_reference</a>< const T >",
      "typePlain": "device_reference< const T >",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-const-reference",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-size-type",
      "category": "types",
      "const": false,
      "definition": "typedef std::size_t thrust::device_new_allocator< T >::size_type",
      "details": "Type of allocation size, <code>std::size&#95;t</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::size_type",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 65,
        "column": 47,
        "file": "thrust/device_new_allocator.h",
        "line": 65
      },
      "name": "size_type",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::size_type",
      "refid": "classthrust_1_1device__new__allocator_1ae08c58ac9b7883f96563b03f5a209b6f",
      "static": false,
      "strong": false,
      "title": "size_type",
      "type": "std::size_t",
      "typePlain": "std::size_t",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-size-type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-difference-type",
      "category": "types",
      "const": false,
      "definition": "typedef pointer::difference_type thrust::device_new_allocator< T >::difference_type",
      "details": "Type of allocation difference, <code>pointer::difference&#95;type</code>. ",
      "explicit": false,
      "fullname": "thrust::device_new_allocator::difference_type",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/device_new_allocator.h",
        "bodyStart": 68,
        "column": 47,
        "file": "thrust/device_new_allocator.h",
        "line": 68
      },
      "name": "difference_type",
      "override": false,
      "qualifiedname": "thrust::device_new_allocator::difference_type",
      "refid": "classthrust_1_1device__new__allocator_1afafaa36cebb15dd77cee77b907ac777c",
      "static": false,
      "strong": false,
      "title": "difference_type",
      "type": "pointer::difference_type",
      "typePlain": "pointer::difference_type",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html#typedef-difference-type",
      "visibility": "public"
    }
  ],
  "qualifiedname": "thrust::device_new_allocator",
  "refid": "classthrust_1_1device__new__allocator",
  "see": [
    "device_new ",
    "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__ptr.html\">device_ptr</a>",
    "<a href=\"https://en.cppreference.com/w/cpp/memory/allocator\">https://en.cppreference.com/w/cpp/memory/allocator</a>"
  ],
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "name": "",
      "type": "typename T",
      "typePlain": "typename T"
    }
  ],
  "title": "thrust::device_new_allocator",
  "url": "{{ site.baseurl }}/api/classes/classthrust_1_1device__new__allocator.html",
  "visibility": "public"
}