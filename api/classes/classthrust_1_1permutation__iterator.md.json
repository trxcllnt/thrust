{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": true,
      "name": "thrust::detail::permutation_iterator_base::type",
      "refid": null,
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> is an iterator which represents a pointer into a reordered view of a given range. <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> is an imprecise name; the reordered view need not be a strict permutation. This iterator is useful for fusing a scatter or gather operation with other algorithms.\n\nThis iterator takes two arguments:\n\n\n\n* an iterator to the range <code>V</code> on which the \"permutation\" will be applied\n* the reindexing scheme that defines how the elements of <code>V</code> will be permuted.\nNote that <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> is not limited to strict permutations of the given range <code>V</code>. The distance between begin and end of the reindexing iterators is allowed to be smaller compared to the size of the range <code>V</code>, in which case the <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> only provides a \"permutation\" of a subrange of <code>V</code>. The indices neither need to be unique. In this same context, it must be noted that the past-the-end <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> is completely defined by means of the past-the-end iterator to the indices.\n\nThe following code snippet demonstrates how to create a <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> which represents a reordering of the contents of a <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1device__vector.html\">device&#95;vector</a></code>.\n\n\n\n```cpp\n#include <thrust/iterator/permutation_iterator.h>\n#include <thrust/device_vector.h>\n...\nthrust::device_vector<float> values(8);\nvalues[0] = 10.0f;\nvalues[1] = 20.0f;\nvalues[2] = 30.0f;\nvalues[3] = 40.0f;\nvalues[4] = 50.0f;\nvalues[5] = 60.0f;\nvalues[6] = 70.0f;\nvalues[7] = 80.0f;\n\nthrust::device_vector<int> indices(4);\nindices[0] = 2;\nindices[1] = 6;\nindices[2] = 1;\nindices[3] = 3;\n\ntypedef thrust::device_vector<float>::iterator ElementIterator;\ntypedef thrust::device_vector<int>::iterator   IndexIterator;\n\nthrust::permutation_iterator<ElementIterator,IndexIterator> iter(values.begin(), indices.begin());\n\n*iter;   // returns 30.0f;\niter[0]; // returns 30.0f;\niter[1]; // returns 70.0f;\niter[2]; // returns 20.0f;\niter[3]; // returns 40.0f;\n\n// iter[4] is an out-of-bounds error\n\n*iter   = -1.0f; // sets values[2] to -1.0f;\niter[0] = -1.0f; // sets values[2] to -1.0f;\niter[1] = -1.0f; // sets values[6] to -1.0f;\niter[2] = -1.0f; // sets values[1] to -1.0f;\niter[3] = -1.0f; // sets values[3] to -1.0f;\n\n// values is now {10, -1, -1, -1, 50, 60, -1, 80}\n```",
  "explicit": false,
  "fullname": "thrust::permutation_iterator",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/iterator/permutation_iterator.h>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 189,
    "bodyFile": "thrust/iterator/permutation_iterator.h",
    "bodyStart": 124,
    "column": 3,
    "file": "thrust/iterator/permutation_iterator.h",
    "line": 119
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "fancyiterator",
    "kind": "group",
    "language": "",
    "name": "fancyiterator",
    "qualifiedname": "fancyiterator",
    "refid": "group__fancyiterator",
    "title": "Fancy Iterators",
    "url": "{{ site.baseurl }}/api/groups/group__fancyiterator.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "iterators",
      "kind": "group",
      "language": "",
      "name": "iterators",
      "qualifiedname": "iterators",
      "refid": "group__iterators",
      "title": "Iterators",
      "url": "{{ site.baseurl }}/api/groups/group__iterators.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "fancyiterator",
      "kind": "group",
      "language": "",
      "name": "fancyiterator",
      "qualifiedname": "fancyiterator",
      "refid": "group__fancyiterator",
      "title": "Fancy Iterators",
      "url": "{{ site.baseurl }}/api/groups/group__fancyiterator.html",
      "visibility": "public"
    }
  ],
  "name": "thrust::permutation_iterator",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "thrust",
    "kind": "namespace",
    "language": "cpp",
    "name": "thrust",
    "qualifiedname": "thrust",
    "refid": "namespacethrust",
    "title": "thrust",
    "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "thrust",
      "kind": "namespace",
      "language": "cpp",
      "name": "thrust",
      "qualifiedname": "thrust",
      "refid": "namespacethrust",
      "title": "thrust",
      "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-permutation-iterator",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::permutation_iterator< ElementIterator, IndexIterator >::permutation_iterator",
      "deleted": false,
      "details": "Null constructor calls the null constructor of this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a>'s</code> element iterator. ",
      "explicit": false,
      "fullname": "thrust::permutation_iterator::permutation_iterator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 140,
        "bodyFile": "thrust/iterator/permutation_iterator.h",
        "bodyStart": 139,
        "column": 5,
        "file": "thrust/iterator/permutation_iterator.h",
        "line": 139
      },
      "name": "permutation_iterator",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::permutation_iterator::permutation_iterator",
      "refid": "classthrust_1_1permutation__iterator_1af9fc8ea07931c33c3d5a545ce0c138e5",
      "static": false,
      "strong": false,
      "title": "permutation_iterator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html#function-permutation-iterator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-permutation-iterator",
      "argsString": "(ElementIterator x, IndexIterator y)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::permutation_iterator< ElementIterator, IndexIterator >::permutation_iterator",
      "deleted": false,
      "details": "Constructor accepts an <code>ElementIterator</code> into a range of values and an <code>IndexIterator</code> into a range of indices defining the indexing scheme on the values.",
      "explicit": true,
      "fullname": "thrust::permutation_iterator::permutation_iterator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 151,
        "bodyFile": "thrust/iterator/permutation_iterator.h",
        "bodyStart": 150,
        "column": 14,
        "file": "thrust/iterator/permutation_iterator.h",
        "line": 150
      },
      "name": "permutation_iterator",
      "override": false,
      "paramList": [
        {
          "name": "x",
          "text": "An <code>ElementIterator</code> pointing this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a>'s</code> range of values. "
        },
        {
          "name": "y",
          "text": "An <code>IndexIterator</code> pointing to an indexing scheme to use on <code>x</code>. "
        }
      ],
      "params": [
        {
          "name": "x",
          "type": "ElementIterator",
          "typePlain": "ElementIterator"
        },
        {
          "name": "y",
          "type": "IndexIterator",
          "typePlain": "IndexIterator"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::permutation_iterator::permutation_iterator",
      "refid": "classthrust_1_1permutation__iterator_1a08a68c1195e02d811fc0ae3f548e5f1e",
      "static": false,
      "strong": false,
      "title": "permutation_iterator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html#function-permutation-iterator",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-permutation-iterator",
      "argsString": "(permutation_iterator< OtherElementIterator, OtherIndexIterator > const &r, typename detail::enable_if_convertible< OtherElementIterator, ElementIterator >::type *=0, typename detail::enable_if_convertible< OtherIndexIterator, IndexIterator >::type *=0)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::permutation_iterator< ElementIterator, IndexIterator >::permutation_iterator",
      "deleted": false,
      "details": "Copy constructor accepts a related <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code>. ",
      "explicit": false,
      "fullname": "thrust::permutation_iterator::permutation_iterator",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 164,
        "bodyFile": "thrust/iterator/permutation_iterator.h",
        "bodyStart": 158,
        "column": 5,
        "file": "thrust/iterator/permutation_iterator.h",
        "line": 158
      },
      "name": "permutation_iterator",
      "override": false,
      "paramList": [
        {
          "name": "r",
          "text": "A compatible <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation&#95;iterator</a></code> to copy from. "
        }
      ],
      "params": [
        {
          "name": "r",
          "type": "<a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html\">permutation_iterator</a>< OtherElementIterator, OtherIndexIterator > const &",
          "typePlain": "permutation_iterator< OtherElementIterator, OtherIndexIterator > const &"
        },
        {
          "defval": "0",
          "defvalPlain": "0",
          "name": "",
          "type": "typename detail::enable_if_convertible< OtherElementIterator, ElementIterator >::type *",
          "typePlain": "typename detail::enable_if_convertible< OtherElementIterator, ElementIterator >::type *"
        },
        {
          "defval": "0",
          "defvalPlain": "0",
          "name": "",
          "type": "typename detail::enable_if_convertible< OtherIndexIterator, IndexIterator >::type *",
          "typePlain": "typename detail::enable_if_convertible< OtherIndexIterator, IndexIterator >::type *"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::permutation_iterator::permutation_iterator",
      "refid": "classthrust_1_1permutation__iterator_1a544fc18751e433c2522a4b2c1c54f7a6",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename OtherElementIterator",
          "typePlain": "typename OtherElementIterator"
        },
        {
          "name": "",
          "type": "typename OtherIndexIterator",
          "typePlain": "typename OtherIndexIterator"
        }
      ],
      "title": "permutation_iterator",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html#function-permutation-iterator",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "qualifiedname": "thrust::permutation_iterator",
  "refid": "classthrust_1_1permutation__iterator",
  "see": [
    "make_permutation_iterator "
  ],
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "name": "",
      "type": "typename ElementIterator",
      "typePlain": "typename ElementIterator"
    },
    {
      "name": "",
      "type": "typename IndexIterator",
      "typePlain": "typename IndexIterator"
    }
  ],
  "title": "thrust::permutation_iterator",
  "url": "{{ site.baseurl }}/api/classes/classthrust_1_1permutation__iterator.html",
  "visibility": "public"
}