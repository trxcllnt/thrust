{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": true,
      "name": "detail::iterator_adaptor_base::type",
      "refid": null,
      "virtual": "non-virtual",
      "visibility": "public"
    }
  ],
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> is an iterator which adapts an existing type of iterator to create a new type of iterator. Most of Thrust's fancy iterators are defined via inheritance from <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code>. While composition of these existing Thrust iterators is often sufficient for expressing the desired functionality, it is occasionally more straightforward to derive from <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> directly.\n\nTo see how to use <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> to create a novel iterator type, let's examine how to use it to define <code>repeat&#95;iterator</code>, a fancy iterator which repeats elements from another range a given number of time:\n\n\n\n```cpp\n#include <thrust/iterator/iterator_adaptor.h>\n\n// derive repeat_iterator from iterator_adaptor\ntemplate<typename Iterator>\n  class repeat_iterator\n    : public thrust::iterator_adaptor<\n        repeat_iterator<Iterator>, // the first template parameter is the name of the iterator we're creating\n        Iterator                   // the second template parameter is the name of the iterator we're adapting\n                                   // we can use the default for the additional template parameters\n      >\n{\n  public:\n    // shorthand for the name of the iterator_adaptor we're deriving from\n    typedef thrust::iterator_adaptor<\n      repeat_iterator<Iterator>,\n      Iterator\n    > super_t;\n\n    __host__ __device__\n    repeat_iterator(const Iterator &x, int n) : super_t(x), begin(x), n(n) {}\n\n    // befriend thrust::iterator_core_access to allow it access to the private interface below\n    friend class thrust::iterator_core_access;\n\n  private:\n    // repeat each element of the adapted range n times\n    unsigned int n;\n\n    // used to keep track of where we began\n    const Iterator begin;\n\n    // it is private because only thrust::iterator_core_access needs access to it\n    __host__ __device__\n    typename super_t::reference dereference() const\n    {\n      return *(begin + (this->base() - begin) / n);\n    }\n};\n```\n\nExcept for the first two, <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a>'s</code> template parameters are optional. When omitted, or when the user specifies <code>thrust::use&#95;default</code> in its place, <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> will use a default type inferred from <code>Base</code>.\n\n<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a>'s</code> functionality is derived from and generally equivalent to <code>boost::iterator&#95;adaptor</code>. The exception is Thrust's addition of the template parameter <code>System</code>, which is necessary to allow Thrust to dispatch an algorithm to one of several parallel backend systems.\n\n<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> is a powerful tool for creating custom iterators directly. However, the large set of iterator semantics which must be satisfied for algorithm compatibility can make <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> difficult to use correctly. Unless you require the full expressivity of <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code>, consider building a custom iterator through composition of existing higher-level fancy iterators instead.\n\nInterested users may refer to <code>boost::iterator&#95;adaptor</code>'s documentation for further usage examples. ",
  "explicit": false,
  "fullname": "thrust::iterator_adaptor",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/iterator/iterator_adaptor.h>",
  "inline": false,
  "kind": "class",
  "language": "cpp",
  "location": {
    "bodyEnd": 233,
    "bodyFile": "thrust/iterator/iterator_adaptor.h",
    "bodyStart": 124,
    "column": 3,
    "file": "thrust/iterator/iterator_adaptor.h",
    "line": 120
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "fancyiterator",
    "kind": "group",
    "language": "",
    "name": "fancyiterator",
    "qualifiedname": "fancyiterator",
    "refid": "group__fancyiterator",
    "title": "Fancy Iterators",
    "url": "{{ site.baseurl }}/api/groups/group__fancyiterator.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "iterators",
      "kind": "group",
      "language": "",
      "name": "iterators",
      "qualifiedname": "iterators",
      "refid": "group__iterators",
      "title": "Iterators",
      "url": "{{ site.baseurl }}/api/groups/group__iterators.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "fancyiterator",
      "kind": "group",
      "language": "",
      "name": "fancyiterator",
      "qualifiedname": "fancyiterator",
      "refid": "group__fancyiterator",
      "title": "Fancy Iterators",
      "url": "{{ site.baseurl }}/api/groups/group__fancyiterator.html",
      "visibility": "public"
    }
  ],
  "name": "thrust::iterator_adaptor",
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "thrust",
    "kind": "namespace",
    "language": "cpp",
    "name": "thrust",
    "qualifiedname": "thrust",
    "refid": "namespacethrust",
    "title": "thrust",
    "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "thrust",
      "kind": "namespace",
      "language": "cpp",
      "name": "thrust",
      "qualifiedname": "thrust",
      "refid": "namespacethrust",
      "title": "thrust",
      "url": "{{ site.baseurl }}/api/namespaces/namespacethrust.html",
      "visibility": "public"
    }
  ],
  "protectedFunctions": [
    {
      "abstract": false,
      "anchor": "#function-base-reference",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ Base const  & thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::base_reference",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::iterator_adaptor::base_reference",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 175,
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 174,
        "column": 16,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 174
      },
      "name": "base_reference",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::iterator_adaptor::base_reference",
      "refid": "classthrust_1_1iterator__adaptor_1a870b81f361a50b1497cf3edb4376ba4b",
      "returns": [
        "A <code>const</code> reference to the <code>Base</code> iterator this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> adapts. "
      ],
      "static": false,
      "strong": false,
      "title": "base_reference",
      "type": "__host__ __device__ Base const &",
      "typePlain": "__host__ __device__ Base const &",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#function-base-reference",
      "virtual": false,
      "visibility": "protected"
    },
    {
      "abstract": false,
      "anchor": "#function-base-reference",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ Base & thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::base_reference",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::iterator_adaptor::base_reference",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 181,
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 180,
        "column": 10,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 180
      },
      "name": "base_reference",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::iterator_adaptor::base_reference",
      "refid": "classthrust_1_1iterator__adaptor_1a4e3d24e09ab30801fc7addb349cc1133",
      "returns": [
        "A mutable reference to the <code>Base</code> iterator this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> adapts. "
      ],
      "static": false,
      "strong": false,
      "title": "base_reference",
      "type": "__host__ __device__ Base &",
      "typePlain": "__host__ __device__ Base &",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#function-base-reference",
      "virtual": false,
      "visibility": "protected"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-iterator-adaptor",
      "argsString": "()",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::iterator_adaptor",
      "deleted": false,
      "details": "<code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a>'s</code> default constructor does nothing. ",
      "explicit": false,
      "fullname": "thrust::iterator_adaptor::iterator_adaptor",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 142,
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 142,
        "column": 5,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 142
      },
      "name": "iterator_adaptor",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::iterator_adaptor::iterator_adaptor",
      "refid": "classthrust_1_1iterator__adaptor_1a72f8c2aa9772c1d32b12c30be6a4b781",
      "static": false,
      "strong": false,
      "title": "iterator_adaptor",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#function-iterator-adaptor",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-iterator-adaptor",
      "argsString": "(Base const &iter)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__thrust_exec_check_disable__ __host__ __device__ thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::iterator_adaptor",
      "deleted": false,
      "details": "This constructor copies from a given instance of the <code>Base</code> iterator. ",
      "explicit": true,
      "fullname": "thrust::iterator_adaptor::iterator_adaptor",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 150,
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 148,
        "column": 14,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 148
      },
      "name": "iterator_adaptor",
      "override": false,
      "params": [
        {
          "name": "iter",
          "type": "Base const &",
          "typePlain": "Base const &"
        }
      ],
      "pureVirtual": false,
      "qualifiedname": "thrust::iterator_adaptor::iterator_adaptor",
      "refid": "classthrust_1_1iterator__adaptor_1af2854055f6421e1934f7d091ffc87eab",
      "static": false,
      "strong": false,
      "title": "iterator_adaptor",
      "type": "__thrust_exec_check_disable__ __host__ __device__",
      "typePlain": "__thrust_exec_check_disable__ __host__ __device__",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#function-iterator-adaptor",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-base",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ Base const  & thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::base",
      "deleted": false,
      "explicit": false,
      "fullname": "thrust::iterator_adaptor::base",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "language": "cpp",
      "location": {
        "bodyEnd": 168,
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 167,
        "column": 16,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 167
      },
      "name": "base",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "qualifiedname": "thrust::iterator_adaptor::base",
      "refid": "classthrust_1_1iterator__adaptor_1a9d4a9146f7cd5a151e40af32fc71436c",
      "returns": [
        "A <code>const</code> reference to the <code>Base</code> iterator this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a></code> adapts. "
      ],
      "static": false,
      "strong": false,
      "title": "base",
      "type": "__host__ __device__ Base const &",
      "typePlain": "__host__ __device__ Base const &",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#function-base",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-base-type",
      "category": "types",
      "const": false,
      "definition": "typedef Base thrust::iterator_adaptor< Derived, Base, Value, System, Traversal, Reference, Difference >::base_type",
      "details": "The type of iterator this <code><a href=\"{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html\">iterator&#95;adaptor</a>'s</code><code>adapts</code>. ",
      "explicit": false,
      "fullname": "thrust::iterator_adaptor::base_type",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "language": "cpp",
      "location": {
        "bodyFile": "thrust/iterator/iterator_adaptor.h",
        "bodyStart": 154,
        "column": 24,
        "file": "thrust/iterator/iterator_adaptor.h",
        "line": 154
      },
      "name": "base_type",
      "override": false,
      "qualifiedname": "thrust::iterator_adaptor::base_type",
      "refid": "classthrust_1_1iterator__adaptor_1a219d8012dc428b76517a9be829a83726",
      "static": false,
      "strong": false,
      "title": "base_type",
      "type": "Base",
      "typePlain": "Base",
      "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html#typedef-base-type",
      "visibility": "public"
    }
  ],
  "qualifiedname": "thrust::iterator_adaptor",
  "refid": "classthrust_1_1iterator__adaptor",
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "name": "",
      "type": "typename Derived",
      "typePlain": "typename Derived"
    },
    {
      "name": "",
      "type": "typename Base",
      "typePlain": "typename Base"
    },
    {
      "defval": "use_default",
      "defvalPlain": "use_default",
      "name": "",
      "type": "typename Value",
      "typePlain": "typename Value"
    },
    {
      "defval": "use_default",
      "defvalPlain": "use_default",
      "name": "",
      "type": "typename System",
      "typePlain": "typename System"
    },
    {
      "defval": "use_default",
      "defvalPlain": "use_default",
      "name": "",
      "type": "typename Traversal",
      "typePlain": "typename Traversal"
    },
    {
      "defval": "use_default",
      "defvalPlain": "use_default",
      "name": "",
      "type": "typename Reference",
      "typePlain": "typename Reference"
    },
    {
      "defval": "use_default",
      "defvalPlain": "use_default",
      "name": "",
      "type": "typename Difference",
      "typePlain": "typename Difference"
    }
  ],
  "title": "thrust::iterator_adaptor",
  "url": "{{ site.baseurl }}/api/classes/classthrust_1_1iterator__adaptor.html",
  "visibility": "public"
}